# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import diarization_pb2 as diarization__pb2


class DiarizeStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.diarize_from_wav = channel.unary_unary(
        '/Diarize/diarize_from_wav',
        request_serializer=diarization__pb2.Input.SerializeToString,
        response_deserializer=diarization__pb2.Output.FromString,
        )


class DiarizeServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def diarize_from_wav(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DiarizeServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'diarize_from_wav': grpc.unary_unary_rpc_method_handler(
          servicer.diarize_from_wav,
          request_deserializer=diarization__pb2.Input.FromString,
          response_serializer=diarization__pb2.Output.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Diarize', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
